                                                                         Questions


1. For the given JSON iterate over all for loops ( for , for in , for of , forEach ) 
2. Create your own resume data in JSON format 
3 . Read about the difference between window , screen , and document in javascript 

// 1. For the given JSON iterate over all for loops ( for , for in , for of , forEach )
var request = new XMLHttpRequest();
request.open("GET", "https://raw.githubusercontent.com/rvsp/restcountries-json-data/master/res-countries.json");
request.send();
request.onload = function() {
    var result = JSON.parse(request.response);
    console.log(result);
    // for loop
      for (let i = 0; index < result.length; i++) {
           const element = result[i];
      }
    // for in loop 
     for (const key in result) {
         console.log(result[key]);
      }
    // for of loop
     for (const iterator of result) {
           console.log(iterator);
      }
}

2. Create your own resume data in JSON format 
{
  "basics": {
    "name": "elaiya",
    "label": "Programmer",
    "image": "",
    "email": "elaiyavenkat@gmail.com",
    "phone": "9943751226",
    "url": "https://elaiya.com",
    "summary": "A summary of elaiya…",
    "location": {
      "address": "5/52 school street",
      "postalCode": "636121",
      "city": "salem",
      "countryCode": "IN",
    },
    "profiles": [{
      "network": "Twitter",
      "username": "elaiya@8",
      "url": "https://twitter.com/elaiya"
    }]
  },
 
  "education": [{
    "institution": "karpagam University",
    "url": "https://karpagam.com/",
    "area": "web Development",
    "studyType": "Bachelor",
    "startDate": "2018-01-01",
    "endDate": "2021-01-01",
    "score": "4.0",
  }],
  
  "certificates": [{
    "name": "elaiya",
    "date": "2022-11-07",
    "issuer": "guvi Company",
    "url": "https://certificate.com"
  }],
  "publications": [{
    "name": "Publication",
    "publisher": "Company",
    "releaseDate": "2014-10-01",
    "url": "https://publication.com",
    "summary": "Description…"
  }],
  "skills": [{
    "name": "Web Development",
    "level": "Master",
    "keywords": [
      "HTML",
      "CSS",
      "JavaScript"
    ]
  }],
  "languages": [{
    "language": "English",
    "fluency": "Native speaker"
  }],
  
    "keywords": [
      "HTML"
    ],
    "startDate": "2019-01-01",
    "endDate": "2021-01-01",
    "url": "https://project.com/",
    "roles": [
      "Team Lead"
    ],
    "entity": "Entity",
    "type": "application"
  }]
}


3 . Read about the difference between window , screen , and document in javascript

      1.window is the execution context and global object for that context's JavaScript
      2.document contains the DOM, initialized by parsing HTML
      3.screen describes the physical display's full screen

1.window
Each browser tab has its own top-level window object. 
Each <iframe> (and deprecated <frame>) element has its own window object too, nested within a parent window. 
Each of these windows gets its own separate global object. 
window.window always refers to window, but window.parent and window.
top might refer to enclosing windows, giving access to other execution contexts. 
In addition to document and screen described below, window properties include

setTimeout() and setInterval() binding event handlers to a timer
location giving the current URL
history with methods back() and forward() giving the tab's mutable history
navigator describing the browser software


2.document
Each window object has a document object to be rendered. 
These objects get confused in part because
 HTML elements are added to the global object when assigned a unique id. E.g., in the HTML snippet

<body>
  <p id="holyCow"> This is the first paragraph.</p>
</body>
the paragraph element can be referenced by any of the following:

window.holyCow or window["holyCow"]
document.getElementById("holyCow")
document.querySelector("#holyCow")
document.body.firstChild
document.body.children[0]

3.screen
The window object also has a screen object with properties describing the physical display:

screen properties width and height are the full screen

screen properties availWidth and availHeight omit the toolbar

The portion of a screen displaying the rendered document is the viewport in JavaScript, 
which is potentially confusing because we call an application's portion of the screen 
a window when talking about interactions with the operating system. 
The getBoundingClientRect() method of any document
 element will return an object with top, left, bottom, and right properties describing the location of the element in the viewport.



var data=userInput[0];
if(data<0){
    console.log("Error");
}
else{
    var num=2*Math.PI*data;
    console.log(num.toFixed(2));
}
